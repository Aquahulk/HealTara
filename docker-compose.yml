version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: docproc-postgres
    environment:
      POSTGRES_DB: docproc
      POSTGRES_USER: docproc_user
      POSTGRES_PASSWORD: docproc_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/api/prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - docproc-network
    restart: unless-stopped

  # Redis (Optional - for future caching)
  redis:
    image: redis:7-alpine
    container_name: docproc-redis
    ports:
      - "6379:6379"
    networks:
      - docproc-network
    restart: unless-stopped

  # API Server
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: docproc-api
    environment:
      DATABASE_URL: postgresql://docproc_user:docproc_password@postgres:5432/docproc
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      NODE_ENV: development
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - docproc-network
    restart: unless-stopped
    volumes:
      - ./apps/api:/app
      - /app/node_modules

  # Web App
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: docproc-web
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - docproc-network
    restart: unless-stopped
    volumes:
      - ./apps/web:/app
      - /app/node_modules

volumes:
  postgres_data:

networks:
  docproc-network:
    driver: bridge
